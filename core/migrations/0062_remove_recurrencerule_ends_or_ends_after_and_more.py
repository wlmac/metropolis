# Generated by Django 4.0.10 on 2023-04-11 02:07

import core.utils.fields
from django.db import migrations, models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0061_remove_recurrencerule_ends_after_greater_than_starts_and_more'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='recurrencerule',
            name='ends_or_ends_after',
        ),
        migrations.RemoveConstraint(
            model_name='recurrencerule',
            name='repeat_on_only_with_weekly_type',
        ),
        migrations.RemoveConstraint(
            model_name='recurrencerule',
            name='repeat_type_only_with_monthly_type',
        ),
        migrations.RemoveConstraint(
            model_name='recurrencerule',
            name='daily_repeat_every_gt_1',
        ),
        migrations.RemoveField(
            model_name='recurrencerule',
            name='repeats_every',
        ),
        migrations.AddField(
            model_name='recurrencerule',
            name='interval',
            field=core.utils.fields.PositiveOneSmallIntegerField(default=1, help_text='The interval between each freq iteration. For example, when using YEARLY, an interval of 2 means once every two years, but with HOURLY, it means once every two hours. The default interval is 1.'),
        ),
        migrations.AddField(
            model_name='recurrencerule',
            name='repeat_monthdays',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], help_text='If given, it must be either an integer, or a sequence of integers, meaning the days of the month to apply the recurrence to. (only allowed for monthly and yearly recurrences)', max_length=83, null=True),
        ),
        migrations.AddField(
            model_name='recurrencerule',
            name='repeat_months',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], help_text='If given, it must be either an month, or a sequence of months, meaning the months to apply the recurrence to. (only allowed for monthly and yearly recurrences)', max_length=26, null=True),
        ),
        migrations.AlterField(
            model_name='recurrencerule',
            name='ends_after',
            field=core.utils.fields.PositiveOneSmallIntegerField(blank=True, help_text='the number of times to repeat the event before ending. e.g. 5 would mean the event will reoccur 5 times before stopping.', null=True),
        ),
        migrations.AlterField(
            model_name='recurrencerule',
            name='type',
            field=models.CharField(choices=[(3, 'Daily'), (2, 'Weekly'), (1, 'Monthly'), (0, 'Yearly')], help_text='the type of repetition. (e.g. daily, weekly, monthly, yearly)', max_length=16),
        ),
    ]
